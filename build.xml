<project xmlns:ivy="antlib:org.apache.ivy.ant" name="zm-ldap-utilities" default="generate-ldap-config">
  <import file="./build-common.xml" />
  <property name="service.webapp.dir" location="${jetty.webapps.dir}/service" />
  <property name="zimbra.webapp.dir" location="${jetty.webapps.dir}/zimbra" />
  <property name="admin.webapp.dir" location="${jetty.webapps.dir}/zimbraAdmin" />
  <property name="attr.config.dir" location="./store/conf" />
  <property name="config.dir" location="conf" />
  <property name="warfilename" value="service.war" />
  <property name="warfile" location="${build.dir}/${warfilename}" />
  <condition property="production.suffix" value=".production" else="">
    <isset property="is-production" />
  </condition>
  <condition property="war.web.xml" value="${config.dir}/web.xml${production.suffix}">
    <not>
      <isset property="war.web.xml" />
    </not>
  </condition>
  <!-- properties used for generating and testing LDAP changes -->
  <property name="ldap.config.dir" location="conf/ldap" />
  <property name="slapd.config.dir" value="${ldap.config.dir}/config" />
  <condition property="slapd.config.src" value="${slapd.config.dir}/cn=config.ldif">
    <isset property="is-production" />
  </condition>
  <condition property="slapd.config.src" value="${slapd.config.dir}/cn=config.ldif.dev">
    <not>
      <isset property="is-production" />
    </not>
  </condition>


  <property name="slapd.conf.src" value="${ldap.config.dir}/slapd.conf${production.suffix}" />
  <property name="slapd.conf.dir" value="conf" />
  <property name="slapd.etc.dir" value="common/etc/openldap" />
  <property name="ldapmodify" value="${zimbra.home.dir}/common/bin/ldapmodify" />
  <property name="ldapdelete" value="${zimbra.home.dir}/common/bin/ldapdelete" />
  <property name="build-dist" value="${build.dir}/dist" />

  <!-- classpath for running utilities -->
  <path id="run.class.path">
    <path refid="class.path" />
  </path>

  <target name="init-ivy-cache">
    <mkdir dir="${user.home}/.ivy2/cache" />
  </target>

  <target name="generate-ldap-config" depends="resolve">
    <dependset>
      <srcfileset dir="${attr.config.dir}/attrs" includes="*.xml" />
      <targetfileset dir="${build.dir}/ldap-config" includes="*" />
    </dependset>
    <delete dir="${build.dir}/attrs" />
    <delete dir="${build.dir}/ldap-config" />
    <mkdir dir="${build.dir}/attrs" />
    <copy todir="${build.dir}/attrs" overwrite="true" preservelastmodified="true">
      <fileset dir="${attr.config.dir}/attrs" includes="*.xml" />
    </copy>
    <mkdir dir="${build.dir}/ldap-config" />
    <mkdir dir="${build.dir}/ldap-config/config" />
    <mkdir dir="${build.dir}/ldap-config/schema" />
    <mkdir dir="${build.dir}/ldap-config/config/cn=config" />
    <!-- Schema for pre OpenLDAP 2.4 - uses carbonio.schema-template, should eventually retire carbonio.schema-template and only use ocs.xml -->
    <java classname="com.zimbra.cs.account.AttributeManagerUtil" fork="true" classpathref="run.class.path" failonerror="true">
      <sysproperty key="zimbra.version" value="${zimbra.buildinfo.all}" />
      <arg line="-a generateLdapSchema -i ${build.dir}/attrs -t ${ldap.config.dir}/carbonio.schema-template -o ${build.dir}/ldap-config/schema/carbonio.schema" />
    </java>
    <!-- Zimbra schema for OpenLDAP 2.4 - use ocs.xml -->
    <java classname="com.zimbra.cs.account.AttributeManagerUtil" fork="true" classpathref="run.class.path" failonerror="true">
      <sysproperty key="zimbra.version" value="${zimbra.buildinfo.all}" />
      <arg line="-a generateSchemaLdif -i ${build.dir}/attrs -o ${build.dir}/ldap-config/schema/carbonio.ldif" />
    </java>
    <java classname="com.zimbra.cs.account.AttributeManagerUtil" fork="true" classpathref="run.class.path" failonerror="true">
      <sysproperty key="zimbra.version" value="${zimbra.buildinfo.all}" />
      <arg line="-a generateGlobalConfigLdif -i ${build.dir}/attrs -o ${build.dir}/ldap-config/zimbra_globalconfig.ldif" />
    </java>
    <java classname="com.zimbra.cs.account.AttributeManagerUtil" fork="true" classpathref="run.class.path" failonerror="true">
      <sysproperty key="zimbra.version" value="${zimbra.buildinfo.all}" />
      <arg line="-a generateDefaultCOSLdif -i ${build.dir}/attrs -o ${build.dir}/ldap-config/zimbra_defaultcos.ldif" />
    </java>
    <java classname="com.zimbra.cs.account.AttributeManagerUtil" fork="true" classpathref="run.class.path" failonerror="true">
      <sysproperty key="zimbra.version" value="${zimbra.buildinfo.all}" />
      <arg line="-a generateDefaultExternalCOSLdif -i ${build.dir}/attrs -o ${build.dir}/ldap-config/zimbra_defaultexternalcos.ldif" />
    </java>
    <copy todir="${build.dir}/ldap-config" file="${config.dir}/ldap/carbonio.ldif" />
    <copy todir="${build.dir}/ldap-config" file="${config.dir}/ldap/mimehandlers.ldif" />
    <copy todir="${build.dir}/ldap-config/schema" file="${config.dir}/ldap/amavisd.schema" />
    <copy todir="${build.dir}/ldap-config/schema" file="${config.dir}/ldap/amavisd.ldif" />
    <copy todir="${build.dir}/ldap-config/schema" file="${config.dir}/ldap/opendkim.ldif" />

    <copy todir="${build.dir}/ldap-config/config" file="${slapd.config.src}" />
    <copy todir="${build.dir}/ldap-config/config/cn=config" file="${slapd.config.dir}/cn=config/cn=module{0}.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config" file="${slapd.config.dir}/cn=config/cn=schema.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config" file="${slapd.config.dir}/cn=config/olcDatabase={0}config.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config" file="${slapd.config.dir}/cn=config/olcDatabase={-1}frontend.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config" file="${slapd.config.dir}/cn=config/olcDatabase={1}monitor.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config/" file="${slapd.config.dir}/cn=config/olcDatabase={2}mdb.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config/olcDatabase={2}mdb" file="${slapd.config.dir}/cn=config/olcDatabase={2}mdb/olcOverlay={0}dynlist.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config/olcDatabase={2}mdb" file="${slapd.config.dir}/cn=config/olcDatabase={2}mdb/olcOverlay={1}unique.ldif" />
    <copy todir="${build.dir}/ldap-config/config/cn=config/olcDatabase={2}mdb" file="${slapd.config.dir}/cn=config/olcDatabase={2}mdb/olcOverlay={2}noopsrch.ldif" />
    <copy todir="${build.dir}/ldap-config/updates/">
      <fileset dir="src/updates/" includes="**" />
    </copy>

    <!--schema -->

  </target>

  <target name="build-dist" depends="set-dev-version, generate-ldap-config">
    <copy todir="${build-dist}" overwrite="true">
      <fileset dir="${build.dir}/ldap-config" />
    </copy>
  </target>
</project>
